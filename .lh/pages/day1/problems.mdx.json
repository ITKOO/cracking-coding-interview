{
    "sourceFile": "pages/day1/problems.mdx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1727671890108,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1727671911234,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,58 @@\n+# 문제풀이(01 ~ 07)\r\n+\r\n+```java filename=\"Problem01.java\" showLineNumbers copy\r\n+package test;\r\n+\r\n+public class Problem01 {\r\n+\tpublic static void main(String[] args) {\r\n+\r\n+\t}\r\n+}\r\n+```\r\n+\r\n+```java filename=\"Problem02.java\" showLineNumbers copy\r\n+package test;\r\n+\r\n+public class Problem01 {\r\n+\tpublic static void main(String[] args) {\r\n+\r\n+\t}\r\n+}\r\n+```\r\n+```java filename=\"Problem03.java\" showLineNumbers copy\r\n+package test;\r\n+\r\n+public class Problem01 {\r\n+\tpublic static void main(String[] args) {\r\n+\r\n+\t}\r\n+}\r\n+```\r\n+```java filename=\"Problem04.java\" showLineNumbers copy\r\n+package test;\r\n+\r\n+public class Problem01 {\r\n+\tpublic static void main(String[] args) {\r\n+\r\n+\t}\r\n+}\r\n+```\r\n+```java filename=\"Problem05.java\" showLineNumbers copy\r\n+package test;\r\n+\r\n+public class Problem01 {\r\n+\tpublic static void main(String[] args) {\r\n+\r\n+\t}\r\n+}\r\n+```\r\n+```java filename=\"Problem06.java\" showLineNumbers copy\r\n+package test;\r\n+\r\n+public class Problem07 {\r\n+\tpublic static void main(String[] args) {\r\n+\r\n+\t}\r\n+}\r\n+```\r\n+\r\n"
                },
                {
                    "date": 1727672119353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,84 @@\n+# 문제풀이(01 ~ 07)\r\n+\r\n+```java filename=\"Problem01.java\" showLineNumbers copy\r\n+package test;\r\n+\r\n+public class Problem01 {\r\n+\tpublic static void main(String[] args) {\r\n+\r\n+\t}\r\n+}\r\n+```\r\n+\r\n+```java filename=\"Problem02.java\" showLineNumbers copy\r\n+package test;\r\n+\r\n+public class Problem01 {\r\n+\tpublic static void main(String[] args) {\r\n+\r\n+\t}\r\n+}\r\n+```\r\n+```java filename=\"Problem03.java\" showLineNumbers copy\r\n+package test;\r\n+\r\n+public class Problem01 {\r\n+\tpublic static void main(String[] args) {\r\n+\r\n+\t}\r\n+}\r\n+```\r\n+```java filename=\"Problem04.java\" showLineNumbers copy\r\n+package test;\r\n+\r\n+public class Problem01 {\r\n+\tpublic static void main(String[] args) {\r\n+\r\n+\t}\r\n+}\r\n+```\r\n+```java filename=\"Problem05.java\" showLineNumbers copy\r\n+package test;\r\n+public class Solution {\r\n+\r\n+    public int[][] solution(int[][] arr1, int[][] arr2) {\r\n+        // 행렬 arr1과 arr2의 행과 열의 수를 구합니다.\r\n+        int r1 = arr1.length;           // arr1의 행 수\r\n+        int c1 = arr1[0].length;        // arr1의 열 수\r\n+        int r2 = arr2.length;           // arr2의 행 수\r\n+        int c2 = arr2[0].length;        // arr2의 열 수\r\n+\r\n+        // arr1의 열 수와 arr2의 행 수는 같아야 함을 확인합니다.\r\n+        if (c1 != r2) {\r\n+            throw new IllegalArgumentException(\"행렬의 곱셈이 불가능합니다.\"); // 곱셈 불가 시 예외 처리\r\n+        }\r\n+\r\n+        // 결과를 저장할 2차원 배열을 초기화합니다.\r\n+        int[][] answer = new int[r1][c2];\r\n+\r\n+        // 행렬 곱셈을 수행합니다.\r\n+        for (int i = 0; i < r1; i++) { // arr1의 각 행을 순회\r\n+            for (int j = 0; j < c2; j++) { // arr2의 각 열을 순회\r\n+                // 내적 계산을 위한 누적 변수\r\n+                int sum = 0; \r\n+                for (int k = 0; k < c1; k++) { // arr1의 열과 arr2의 행을 곱합니다.\r\n+                    sum += arr1[i][k] * arr2[k][j]; // 내적 계산\r\n+                }\r\n+                answer[i][j] = sum; // 계산된 내적 값을 결과 배열에 저장\r\n+            }\r\n+        }\r\n+\r\n+        // 결과 행렬을 반환합니다.\r\n+        return answer; \r\n+    }\r\n+\r\n+}\r\n+\r\n+```\r\n+```java filename=\"Problem06.java\" showLineNumbers copy\r\n+\r\n+```\r\n+\r\n+```java filename=\"Problem07.java\" showLineNumbers copy\r\n+\r\n+```\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727672154490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,134 +75,40 @@\n }\r\n \r\n ```\r\n ```java filename=\"Problem06.java\" showLineNumbers copy\r\n+import java.util.HashMap;\r\n \r\n-```\r\n+public class Solution {\r\n \r\n-```java filename=\"Problem07.java\" showLineNumbers copy\r\n+    public int[] solution(int N, int[] stages) {\r\n+        // 스테이지별 도전자 수를 구함\r\n+        int[] challenger = new int[N + 2];\r\n+        for (int i = 0; i < stages.length; i++) {\r\n+            challenger[stages[i]] += 1;\r\n+        }\r\n \r\n-```\n-# 문제풀이(01 ~ 07)\r\n+        // 스테이지별 실패한 사용자 수 계산\r\n+        HashMap<Integer, Double> fails = new HashMap<>();\r\n+        double total = stages.length;\r\n \r\n-```java filename=\"Problem01.java\" showLineNumbers copy\r\n-package test;\r\n+        // 각 스테이지를 순회하며, 실패율 계산\r\n+        for (int i = 1; i <= N; i++) {\r\n+            if (challenger[i] == 0) { // ❹ 도전한 사람이 없는 경우, 실패율은 0\r\n+                fails.put(i, 0.);\r\n+            }\r\n+            else {\r\n+                fails.put(i, challenger[i] / total); // ❺ 실패율 구함\r\n+                total -= challenger[i]; // ❻ 다음 스테이지 실패율을 구하기 위해 현재 스테이지의 인원을 뺌\r\n+            }\r\n+        }\r\n \r\n-public class Problem01 {\r\n-\tpublic static void main(String[] args) {\r\n+        // 실패율이 높은 스테이지부터 내림차순으로 정렬\r\n+        return fails.entrySet().stream().sorted((o1, o2) -> Double.compare(o2.getValue(), o1.getValue())).mapToInt(HashMap.Entry::getKey).toArray();\r\n+    }\r\n \r\n-\t}\r\n }\r\n ```\r\n \r\n-```java filename=\"Problem02.java\" showLineNumbers copy\r\n-package test;\r\n+```java filename=\"Problem07.java\" showLineNumbers copy\r\n \r\n-public class Problem01 {\r\n-\tpublic static void main(String[] args) {\r\n-\r\n-\t}\r\n-}\r\n-```\r\n-```java filename=\"Problem03.java\" showLineNumbers copy\r\n-package test;\r\n-\r\n-public class Problem01 {\r\n-\tpublic static void main(String[] args) {\r\n-\r\n-\t}\r\n-}\r\n-```\r\n-```java filename=\"Problem04.java\" showLineNumbers copy\r\n-package test;\r\n-\r\n-public class Problem01 {\r\n-\tpublic static void main(String[] args) {\r\n-\r\n-\t}\r\n-}\r\n-```\r\n-```java filename=\"Problem05.java\" showLineNumbers copy\r\n-package test;\r\n-\r\n-public class Problem01 {\r\n-\tpublic static void main(String[] args) {\r\n-\r\n-\t}\r\n-}\r\n-```\r\n-```java filename=\"Problem06.java\" showLineNumbers copy\r\n-package test;\r\n-\r\n-public class Problem07 {\r\n-\tpublic static void main(String[] args) {\r\n-\r\n-\t}\r\n-}\r\n-```\r\n-\r\n-# 문제풀이(01 ~ 07)\r\n-\r\n-```java filename=\"Problem01.java\" showLineNumbers copy\r\n-package test;\r\n-\r\n-public class Problem01 {\r\n-\tpublic static void main(String[] args) {\r\n-\r\n-\t}\r\n-}\r\n-```\r\n-\r\n-```java filename=\"Problem02.java\" showLineNumbers copy\r\n-package test;\r\n-\r\n-public class Problem01 {\r\n-\tpublic static void main(String[] args) {\r\n-\r\n-\t}\r\n-}\r\n-```\r\n-```java filename=\"Problem03.java\" showLineNumbers copy\r\n-package test;\r\n-\r\n-public class Problem01 {\r\n-\tpublic static void main(String[] args) {\r\n-\r\n-\t}\r\n-}\r\n-```\r\n-```java filename=\"Problem04.java\" showLineNumbers copy\r\n-package test;\r\n-\r\n-public class Problem01 {\r\n-\tpublic static void main(String[] args) {\r\n-\r\n-\t}\r\n-}\r\n-```\r\n-```java filename=\"Problem05.java\" showLineNumbers copy\r\n-package test;\r\n-\r\n-public class Problem01 {\r\n-\tpublic static void main(String[] args) {\r\n-\r\n-\t}\r\n-}\r\n-```\r\n-```java filename=\"Problem01.java\" showLineNumbers copy\r\n-package test;\r\n-\r\n-public class Problem01 {\r\n-\tpublic static void main(String[] args) {\r\n-\r\n-\t}\r\n-}\r\n-```\r\n-```java filename=\"Problem01.java\" showLineNumbers copy\r\n-package test;\r\n-\r\n-public class Problem01 {\r\n-\tpublic static void main(String[] args) {\r\n-\r\n-\t}\r\n-}\r\n ```\n\\ No newline at end of file\n"
                }
            ],
            "date": 1727671890108,
            "name": "Commit-0",
            "content": "# 문제풀이(01 ~ 07)\r\n\r\n```java filename=\"Problem01.java\" showLineNumbers copy\r\npackage test;\r\n\r\npublic class Problem01 {\r\n\tpublic static void main(String[] args) {\r\n\r\n\t}\r\n}\r\n```\r\n\r\n```java filename=\"Problem02.java\" showLineNumbers copy\r\npackage test;\r\n\r\npublic class Problem01 {\r\n\tpublic static void main(String[] args) {\r\n\r\n\t}\r\n}\r\n```\r\n```java filename=\"Problem03.java\" showLineNumbers copy\r\npackage test;\r\n\r\npublic class Problem01 {\r\n\tpublic static void main(String[] args) {\r\n\r\n\t}\r\n}\r\n```\r\n```java filename=\"Problem04.java\" showLineNumbers copy\r\npackage test;\r\n\r\npublic class Problem01 {\r\n\tpublic static void main(String[] args) {\r\n\r\n\t}\r\n}\r\n```\r\n```java filename=\"Problem05.java\" showLineNumbers copy\r\npackage test;\r\n\r\npublic class Problem01 {\r\n\tpublic static void main(String[] args) {\r\n\r\n\t}\r\n}\r\n```\r\n```java filename=\"Problem01.java\" showLineNumbers copy\r\npackage test;\r\n\r\npublic class Problem01 {\r\n\tpublic static void main(String[] args) {\r\n\r\n\t}\r\n}\r\n```\r\n```java filename=\"Problem01.java\" showLineNumbers copy\r\npackage test;\r\n\r\npublic class Problem01 {\r\n\tpublic static void main(String[] args) {\r\n\r\n\t}\r\n}\r\n```\r\n"
        }
    ]
}
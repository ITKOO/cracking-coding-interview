{
    "sourceFile": "pages/day3/problems.mdx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1731917663665,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1731917963787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,32 @@\n ```\r\n ## 문제 17 [카드 뭉치](https://school.programmers.co.kr/learn/courses/30/lessons/159994) by 정성욱\r\n \r\n ```java filename=\"test17(2).java\" showLineNumbers copy\r\n+import java.util.ArrayDeque;\r\n+import java.util.Arrays;\r\n+import java.util.Queue;\r\n \r\n+class Solution {\r\n+    public String solution(String[] cards1, String[] cards2, String[] goal) {\r\n+        ArrayDeque<String> queue1 = new ArrayDeque<>(Arrays.asList(cards1));\r\n+            // Queue<String> queue1 = new ArrayDeque<>(Arrays.asList(cards1));\r\n+        ArrayDeque<String> queue2 = new ArrayDeque<>(Arrays.asList(cards2));\r\n+            // Queue<String> queue2 = new ArrayDeque<>(Arrays.asList(cards2));\r\n+\r\n+        for (String word : goal) {\r\n+            if (!queue1.isEmpty() && word.equals(queue1.peekFirst())) {\r\n+                queue1.pollFirst();\r\n+            } else if (!queue2.isEmpty() && word.equals(queue2.peekFirst())) {\r\n+                queue2.pollFirst();\r\n+            } else {\r\n+                return \"No\";\r\n+            }\r\n+        }\r\n+\r\n+        return \"Yes\";        \r\n+    }\r\n+}\r\n ```\r\n \r\n \r\n \r\n"
                }
            ],
            "date": 1731917663665,
            "name": "Commit-0",
            "content": "# 문제풀이(15 ~ 17)\r\n\r\n```java filename=\"Problem15.java\" showLineNumbers copy\r\npackage test;\r\n\r\npublic class Problem15 {\r\n\tpublic static void main(String[] args) {\r\n\r\n\t}\r\n}\r\n```\r\n\r\n## 문제 17 [카드 뭉치](https://school.programmers.co.kr/learn/courses/30/lessons/159994) by 윤성민\r\n\r\n```java filename=\"test17.java\" showLineNumbers copy\r\nimport java.util.ArrayDeque;\r\nimport java.util.Arrays;\r\n\r\npublic class test17 {\r\n\r\n    public static void main(String[] args) {\r\n        { // Yes\r\n            String[] cards1 = {\"i\", \"drink\", \"water\"};\r\n            String[] cards2 = {\"want\", \"to\"};\r\n            String[] goal = {\"i\", \"want\", \"to\", \"drink\", \"water\"};\r\n\r\n            System.out.println(solution(cards1, cards2, goal));\r\n        }\r\n        { // No\r\n            String[] cards1 = {\"i\", \"water\", \"drink\"};\r\n            String[] cards2 = {\"want\", \"to\"};\r\n            String[] goal = {\"i\", \"want\", \"to\", \"drink\", \"water\"};\r\n\r\n            System.out.println(solution(cards1, cards2, goal));\r\n        }\r\n    }\r\n\r\n    public static String solution(\r\n            String[] cards1,\r\n            String[] cards2,\r\n            String[] goal\r\n    ) {\r\n        ArrayDeque<String> dequeCard1 = new ArrayDeque<>(Arrays.asList(cards1));\r\n        ArrayDeque<String> dequeCard2 = new ArrayDeque<>(Arrays.asList(cards2));\r\n        ArrayDeque<String> dequeGoal = new ArrayDeque<>(Arrays.asList(goal));\r\n\r\n        while (!dequeGoal.isEmpty()) {\r\n            String target = dequeGoal.poll();\r\n            if (!dequeCard1.isEmpty() && dequeCard1.peek().equals(target)) {\r\n                dequeCard1.poll();\r\n            } else if (!dequeCard2.isEmpty() && dequeCard2.peek().equals(target)) {\r\n                dequeCard2.poll();\r\n            } else {\r\n                return \"No\";\r\n            }\r\n        }\r\n\r\n        return \"Yes\";\r\n    }\r\n\t\r\n}\r\n\r\n```\r\n## 문제 17 [카드 뭉치](https://school.programmers.co.kr/learn/courses/30/lessons/159994) by 정성욱\r\n\r\n```java filename=\"test17(2).java\" showLineNumbers copy\r\n\r\n```\r\n\r\n\r\n\r\n\r\n## 문제 16 [기능 개발](https://school.programmers.co.kr/learn/courses/30/lessons/42586) by 신다연\r\n```java filename=\"Problem16.java\" showLineNumbers copy\r\nimport java.util.ArrayDeque;\r\nimport java.util.Arrays;\r\nimport java.util.Queue;\r\n\r\npublic class Solution16 {\r\n\r\n    public static void main(String[] args) {\r\n        int [] progresses1 = {93, 30, 55};\r\n        int [] speeds1 = {1, 30, 5};\r\n\r\n        int [] progresses2 = {90, 95, 39, 59, 99, 87};\r\n        int [] speeds2 = {2, 1, 20, 10, 1, 9};\r\n\r\n        System.out.println(Arrays.toString(solution16(progresses1, speeds1)));\r\n        System.out.println(Arrays.toString(solution16(progresses2, speeds2)));\r\n    }\r\n    public static int[] solution16(int[] progresses, int[] speeds) {\r\n        Queue<Integer> progressesQueue = new ArrayDeque<>();\r\n        Queue<Integer> speedsQueue = new ArrayDeque<>();\r\n\r\n        int[] answer = new int[100];\r\n        int check; // 배포 개수\r\n        int j = 0; // answer 배열 인덱스\r\n\r\n        // 각각의 queue에 초기값을 저장한다.\r\n        for (int i = 0; i < speeds.length; i++) {\r\n            progressesQueue.add(progresses[i]);\r\n            speedsQueue.add(speeds[i]);\r\n        }\r\n\r\n        while (!progressesQueue.isEmpty()) {\r\n            // 모든 작업에 속도를 더하는 과정\r\n            int size = progressesQueue.size();\r\n            for (int i = 0; i < size; i++) {\r\n                int progress = progressesQueue.poll();\r\n                int speed = speedsQueue.poll();\r\n                progressesQueue.add(progress + speed); // 업데이트된 진행 상황을 다시 큐에 추가\r\n                speedsQueue.add(speed); // 속도는 그대로 다시 추가\r\n            }\r\n\r\n            // 배포 과정\r\n            check = 0;\r\n            while (!progressesQueue.isEmpty() && progressesQueue.peek() >= 100) {\r\n                progressesQueue.poll();\r\n                speedsQueue.poll();\r\n                check++;\r\n            }\r\n\r\n            if (check > 0) {\r\n                answer[j++] = check;\r\n            }\r\n        }\r\n\r\n        // 필요한 크기만큼 배열 복사\r\n        int[] result = new int[j];\r\n        System.arraycopy(answer, 0, result, 0, j);\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\n```"
        }
    ]
}
import java.util.*;

public class Solution {
    public int[] solution(int[] answers) {
        // 수포자들의 찍는 패턴
        int[] pattern1 = {1, 2, 3, 4, 5};
        int[] pattern2 = {2, 1, 2, 3, 2, 4, 2, 5};
        int[] pattern3 = {3, 3, 1, 1, 2, 2, 4, 4, 5, 5};

        // 각 수포자의 정답 개수를 저장할 배열
        int[] scores = new int[3];

        // 정답 배열과 패턴을 비교하며 점수 계산
        for (int i = 0; i < answers.length; i++) {
            if (answers[i] == pattern1[i % pattern1.length]) scores[0]++;
            if (answers[i] == pattern2[i % pattern2.length]) scores[1]++;
            if (answers[i] == pattern3[i % pattern3.length]) scores[2]++;
        }

        // 가장 높은 점수 찾기
        int maxScore = Math.max(scores[0], Math.max(scores[1], scores[2]));

        // 가장 높은 점수를 받은 수포자들의 번호를 리스트에 추가
        List<Integer> topScorers = new ArrayList<>();
        for (int i = 0; i < scores.length; i++) {
            if (scores[i] == maxScore) {
                topScorers.add(i + 1); // 수포자의 번호는 1번부터 시작
            }
        }

        // 리스트를 배열로 변환하여 반환
        return topScorers.stream().mapToInt(Integer::intValue).toArray();
    }
}
